# -*- coding: utf-8 -*-
"""base-pair.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/10ioZ9yqpT1sGJ7hNASqzP2UAPkslWZl1
"""

import numpy as np
import pandas as pd
import plotly.express as px
import re

# Define a function to parse EPS files
def parse_eps(file_path):
    with open(file_path, 'r') as f:
        lines = f.readlines()

    pairs = []
    for line in lines:
        if not line.startswith('%'):
            match = re.search(r'(\d+)\s+(\d+)\s+(\d+\.\d+)\s+ubox', line)
            if match:
                i, j, prob = int(match.group(1)), int(match.group(2)), float(match.group(3))
                pairs.append((i-1, j-1, prob))  # Convert to 0-based index
    return pairs

# Load base-pair probabilities for WT and mutant
wt_eps_file = '/content/wild-type.eps'  # Update with the correct path
mutant_eps_file = '/content/mutation1.eps'  # Update with the correct path

wt_pairs = parse_eps(wt_eps_file)
mutant_pairs = parse_eps(mutant_eps_file)

# Create dataframes for Plotly
wt_df = pd.DataFrame(wt_pairs, columns=['x', 'y', 'prob'])
mutant_df = pd.DataFrame(mutant_pairs, columns=['x', 'y', 'prob'])

# Add a column to differentiate WT and mutant
wt_df['type'] = 'WT'
mutant_df['type'] = 'Mutant'

# Combine dataframes
df = pd.concat([wt_df, mutant_df])

# Create the interactive plot
fig = px.scatter(df, x='x', y='y', color='type', size='prob', hover_data=['prob'],
                 color_discrete_map={'WT': 'orange', 'Mutant': 'blue'},
                 title='Base-Pair Probabilities (WT vs. Mutant)',
                 labels={'x': 'Base Position', 'y': 'Base Position'})

fig.update_traces(marker=dict(symbol='circle', line=dict(width=1)))

fig.update_layout(legend=dict(title='Type'))

fig.show()